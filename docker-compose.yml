version: "3.8"
services:
  dynamicDataCollectorService:
    build: ./FractalDynamicDataCollector
    command: python FractalDynamicDataCollector/server/apis/http/api/endpoints.py
    image: jperdek/dynamic-data-collector
    ports:
      - "5000:5000"
    extra_hosts:
        - "hostname1  localhost:127.0.0.1"
    container_name: dynamicDataCollector
    volumes:
      - app-volume:/
    environment:
      FLASK_ENV: development
    networks:
      - buildernet
  fullyAutomatedEvolution:
    build:
      context: ./frontend/semanticAspects
      dockerfile: Dockerfile
    image: jperdek/fully-automated-evolution
    ports:
      - "5002:5002"
    container_name: fully-automated-evolution
    volumes:
      - app-volume:/
    environment:
      FLASK_ENV: development
    networks:
      - buildernet
  astConverterAndComplexityAnalysisAPI:
    image: jperdek/astConverterAndComplexityAnalysisAPI
    build:
      context: ./ConverterAndComplexityAnalyzerAPI
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    extra_hosts:
        - "hostname1  localhost:127.0.0.1"
    networks:
      - buildernet
    restart: on-failure
  fractalKnowledgeBase: 
    build:
       context: ./SemanticBaseNeo4j/fractalKnowledgeBase
       dockerfile: Dockerfile
    image: jperdek/fractalKnowledgeBase
    hostname: neo4j
    container_name: neo4j
    ports:
      - "7475:7475"
      - "7688:7688"
    volumes:
      - ./neo4j/plugins:/plugins
    environment:
      NEO4J_AUTH: neo4j/neo4j1
      NEO4J_dbms_logs_debug_level: DEBUG
volumes:
     dataset-products-volume: 
networks:
  buildernet:
    driver: "bridge"
    